apply from: project.file('../shared/platform.gradle')

/** Zip cpp files */
task cppSourcesZip(type: Zip) {
  destinationDirectory = outputFolder
  archiveBaseName = "${baseID}"
  classifier = "sources"

  if (overrideSrc) {
    from("${srcLoc}") {
      into '/'
    }
  } else {
    from('src/main/cpp') {
      into '/'
    }
  }
}

/** Zip header files */
task cppHeadersZip(type: Zip) {
  destinationDirectory = outputFolder
  archiveBaseName = "${baseID}"
  classifier = "headers"

  if (overrideSrc) {
    ext.includeDirs = [
      project.file("${headersLoc}")
    ]

    ext.includeDirs.each {
      from(it) {
        into '/'
      }
    }
  } else {
    ext.includeDirs = [
      project.file('src/main/include')
    ]

    ext.includeDirs.each {
      from(it) {
        into '/'
      }
    }
  }
}

/** Zip Doxygen */
task documentationZip(type: Zip) {
  destinationDirectory = outputFolder
  archiveBaseName = "${nativeName}"
  classifier = "documentation"

  from("${project.buildDir}/docs/${nativeName}/doxygen") {
    into '/'
  }
}


if (srcZip) {
  build.dependsOn(cppSourcesZip)
}

if (headerZip) {
  build.dependsOn(cppHeadersZip)
  documentationZip.dependsOn(doxygen)
  build.dependsOn(documentationZip)
}